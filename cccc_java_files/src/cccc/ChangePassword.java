/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cccc;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;

/**
 *
 * @author rouancon
 */
public class ChangePassword extends javax.swing.JDialog {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    //variable declarations
    Connection openConnection;
    int id;
    char userType;
    
    public ChangePassword(java.awt.Frame parent, boolean modal, Connection connection, char userType, int id) {
        super(parent, modal);
        initComponents();
        this.id = id;
        openConnection = connection;
        this.userType = userType;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cBillingTitle1 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        currPwd = new javax.swing.JTextField();
        cardTitle1 = new javax.swing.JLabel();
        newPwd = new javax.swing.JTextField();
        CardName3 = new javax.swing.JLabel();
        cnfNewPwd = new javax.swing.JTextField();
        pSave = new javax.swing.JButton();
        pCancel = new javax.swing.JButton();
        errorMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cBillingTitle1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cBillingTitle1.setText("Change Password");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("Current Password:");

        cardTitle1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        cardTitle1.setText("New Password:");

        CardName3.setText("Confirm New Password:");

        pSave.setText("Save");
        pSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSaveActionPerformed(evt);
            }
        });

        pCancel.setText("Cancel");
        pCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pCancelActionPerformed(evt);
            }
        });

        errorMessage.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(pSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CardName3)
                            .addComponent(cardTitle1)
                            .addComponent(jLabel23))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cnfNewPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cBillingTitle1)
                .addGap(109, 109, 109))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cBillingTitle1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(currPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardTitle1)
                    .addComponent(newPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CardName3)
                    .addComponent(cnfNewPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pSave)
                        .addComponent(pCancel)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(134, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pCancelActionPerformed
        // Cancel button pushed, close dialogue with no changes
        dispose();
    }//GEN-LAST:event_pCancelActionPerformed

    private void pSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSaveActionPerformed
        // save button pushed, grab the data in the fields, verify old pw matches, then update pw
        String userOldPass = this.currPwd.getText();
        String userNewPass = this.newPwd.getText();
        String userNewCnfPass = this.cnfNewPwd.getText();
        
        if(userType == 'c') {
            //access the customer DB
            try {
                String query = "CALL get_c_pwd(?);";
                CallableStatement stmt = openConnection.prepareCall(query);
                stmt.setInt(1, id);
                ResultSet rs = stmt.executeQuery();

                String oldPass = rs.getString("password");
                if (oldPass == userOldPass) {
                    if (userNewPass == userNewCnfPass) {
                        query = "UPDATE customer SET c_password=? WHERE c_id=?";
                        stmt = openConnection.prepareCall(query);
                        stmt.setString(1, userNewPass);
                        stmt.setInt(2, id);
                        stmt.executeQuery();
                        dispose();
                    } else {
                        errorMessage.setText("New Passwords Don't Match");
                    }
                } else {
                    errorMessage.setText("Current Password not Correct");
                }

            } catch(Exception e) {
               throw new IllegalStateException("error",e);
            }
        } else{
            //access the employee DB
            try {
                String query = "CALL get_e_pwd(?);";
                CallableStatement stmt = openConnection.prepareCall(query);
                stmt.setInt(1, id);
                ResultSet rs = stmt.executeQuery();

                String oldPass = rs.getString("password");
                if (oldPass == userOldPass) {
                    if (userNewPass == userNewCnfPass) {
                        query = "UPDATE employee SET e_password=? WHERE c_id=?;";
                        stmt = openConnection.prepareCall(query);
                        stmt.setString(1, userNewPass);
                        stmt.setInt(2, id);
                        stmt.executeQuery();
                        dispose();
                    } else {
                        errorMessage.setText("New Passwords Don't Match");
                    }
                } else {
                    errorMessage.setText("Current Password not Correct");
                }

            } catch(Exception e) {
               throw new IllegalStateException("error",e);
            }
        }
    }//GEN-LAST:event_pSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChangePassword dialog = new ChangePassword(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CardName3;
    private javax.swing.JLabel cBillingTitle1;
    private javax.swing.JLabel cardTitle1;
    private javax.swing.JTextField cnfNewPwd;
    private javax.swing.JTextField currPwd;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField newPwd;
    private javax.swing.JButton pCancel;
    private javax.swing.JButton pSave;
    // End of variables declaration//GEN-END:variables
}
